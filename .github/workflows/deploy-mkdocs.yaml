name: Deploy MkDocs

on:
  repository_dispatch:
    types:
      - deploy_docs

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Checkout Repository"
        uses: actions/checkout@v4

      - name: "📜 Install MkDocs and Dependencies"
        run: |
          pip install mkdocs mkdocs-material

      - name: "⬇️ Pull Logs from Docs Folder"
        run: |
          ls -lah docs/
          echo "Test logs should be available in docs/latest/"

      - name: "🔨 Build MkDocs Site"
        run: mkdocs build

      - name: "🔗 Update mkdocs.yml with Build Links"
        run: |
          MKDOCS_CONFIG="./robot-logs/mkdocs.yml"
      
          # Backup the original mkdocs.yml
          cp $MKDOCS_CONFIG $MKDOCS_CONFIG.bak
      
          # Extract everything before the "nav:" section
          awk '/^nav:/{exit} {print}' $MKDOCS_CONFIG.bak > $MKDOCS_CONFIG
      
          echo "nav:" >> $MKDOCS_CONFIG
          echo "  - Home: index.md" >> $MKDOCS_CONFIG
          echo "  - Test Reports:" >> $MKDOCS_CONFIG
          echo "      - Latest Report: reports.md" >> $MKDOCS_CONFIG
      
          # Generate list of builds dynamically
          BUILDS=$(ls -d ./robot-logs/docs/*/ 2>/dev/null | grep -Eo '[0-9]+' | sort -nr || true)
      
          if [[ -z "$BUILDS" ]]; then
            echo "      - No previous builds available" >> $MKDOCS_CONFIG
          else
            for BUILD in $BUILDS; do
              echo "      - Build $BUILD: $BUILD/log.html" >> $MKDOCS_CONFIG
            done
          fi
      
          # Debug: Show the updated file
          cat $MKDOCS_CONFIG

      - name: Deploy using Cloudflare API
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/pages/projects/robot-logs/deployments" \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{"branch": "main", "commit_hash": "${{ github.sha }}"}'
